/**
 * 시트 정리 기능
 * SheetCleaner.gs
 */

const SheetCleaner = {
  /**
   * 보존할 시트 목록
   */
  PRESERVED_SHEETS: [
    '간편식 수기송장 양식',
    '이메일_설정',
    '이메일_로그', 
    '업데이트_로그'
  ],

  /**
   * 일일 작업 완료 후 시트 정리
   */
  cleanupDailySheets: function() {
    console.log('=== 일일 시트 정리 시작 ===');
    
    try {
      const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
      const allSheets = spreadsheet.getSheets();
      const sheetsToDelete = [];
      const preservedSheets = [];
      
      // 삭제할 시트와 보존할 시트 분류
      for (const sheet of allSheets) {
        const sheetName = sheet.getName();
        
        if (this.shouldPreserveSheet(sheetName)) {
          preservedSheets.push(sheetName);
        } else {
          sheetsToDelete.push({
            sheet: sheet,
            name: sheetName
          });
        }
      }
      
      console.log('보존할 시트:', preservedSheets);
      console.log('삭제할 시트:', sheetsToDelete.map(s => s.name));
      
      // 시트 삭제 실행
      let deletedCount = 0;
      const deletedSheets = [];
      
      for (const sheetInfo of sheetsToDelete) {
        try {
          spreadsheet.deleteSheet(sheetInfo.sheet);
          deletedSheets.push(sheetInfo.name);
          deletedCount++;
          console.log(`삭제됨: ${sheetInfo.name}`);
        } catch (deleteError) {
          console.error(`시트 삭제 실패 (${sheetInfo.name}):`, deleteError);
        }
      }
      
      console.log('=== 일일 시트 정리 완료 ===');
      
      return {
        success: true,
        message: `${deletedCount}개 시트가 정리되었습니다.`,
        deletedCount: deletedCount,
        preservedCount: preservedSheets.length,
        deletedSheets: deletedSheets,
        preservedSheets: preservedSheets
      };
      
    } catch (error) {
      console.error('일일 시트 정리 실패:', error);
      return {
        success: false,
        error: error.toString()
      };
    }
  },
  
  /**
   * 시트를 보존할지 여부 판단
   */
  shouldPreserveSheet: function(sheetName) {
    // 정확한 이름 매치
    if (this.PRESERVED_SHEETS.includes(sheetName)) {
      return true;
    }
    
    // TEST_ 시트는 삭제 대상
    if (sheetName.startsWith('TEST_')) {
      return false;
    }
    
    // 샘플/템플릿 시트는 삭제 대상
    if (sheetName.includes('샘플') || sheetName.includes('템플릿') || sheetName.includes('설명')) {
      return false;
    }
    
    return false; // 기본적으로 삭제
  },

  /**
   * 시트 정리 미리보기 (삭제하지 않고 확인만)
   */
  previewCleanup: function() {
    console.log('=== 시트 정리 미리보기 ===');
    
    try {
      const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
      const allSheets = spreadsheet.getSheets();
      const sheetsToDelete = [];
      const preservedSheets = [];
      
      for (const sheet of allSheets) {
        const sheetName = sheet.getName();
        
        if (this.shouldPreserveSheet(sheetName)) {
          preservedSheets.push(sheetName);
        } else {
          sheetsToDelete.push(sheetName);
        }
      }
      
      return {
        success: true,
        sheetsToDelete: sheetsToDelete,
        preservedSheets: preservedSheets,
        totalSheets: allSheets.length,
        deleteCount: sheetsToDelete.length,
        preserveCount: preservedSheets.length
      };
      
    } catch (error) {
      console.error('시트 정리 미리보기 실패:', error);
      return {
        success: false,
        error: error.toString()
      };
    }
  },

  /**
   * 특정 날짜의 시트들만 삭제
   */
  cleanupDateSheets: function(targetDate) {
    console.log(`=== ${targetDate} 날짜 시트 정리 시작 ===`);
    
    try {
      const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
      const allSheets = spreadsheet.getSheets();
      const sheetsToDelete = [];
      
      // 날짜 형식 처리
      let fullDate = targetDate;
      if (targetDate.length === 4) {
        // MMDD → YYYYMMDD
        fullDate = new Date().getFullYear() + targetDate;
      }
      
      for (const sheet of allSheets) {
        const sheetName = sheet.getName();
        
        // 해당 날짜로 시작하는 시트들 찾기
        if (sheetName.startsWith(fullDate + '_') || sheetName.startsWith(fullDate + ' ')) {
          // 보존할 시트가 아닌 경우만 삭제 대상에 추가
          if (!this.shouldPreserveSheet(sheetName)) {
            sheetsToDelete.push({
              sheet: sheet,
              name: sheetName
            });
          }
        }
      }
      
      // 시트 삭제 실행
      let deletedCount = 0;
      const deletedSheets = [];
      
      for (const sheetInfo of sheetsToDelete) {
        try {
          spreadsheet.deleteSheet(sheetInfo.sheet);
          deletedSheets.push(sheetInfo.name);
          deletedCount++;
          console.log(`삭제됨: ${sheetInfo.name}`);
        } catch (deleteError) {
          console.error(`시트 삭제 실패 (${sheetInfo.name}):`, deleteError);
        }
      }
      
      console.log(`=== ${targetDate} 날짜 시트 정리 완료 ===`);
      
      return {
        success: true,
        message: `${targetDate} 날짜의 ${deletedCount}개 시트가 정리되었습니다.`,
        deletedCount: deletedCount,
        deletedSheets: deletedSheets,
        targetDate: targetDate
      };
      
    } catch (error) {
      console.error('날짜별 시트 정리 실패:', error);
      return {
        success: false,
        error: error.toString()
      };
    }
  }
};

/**
 * 일일 시트 정리 (메뉴에서 호출)
 */
function cleanupDailySheets() {
  console.log('=== Global Function Start: cleanupDailySheets ===');
  
  try {
    const ui = SpreadsheetApp.getUi();
    
    // 미리보기 실행
    const previewResult = SheetCleaner.previewCleanup();
    
    if (!previewResult.success) {
      ui.alert('❌ 미리보기 실패: ' + previewResult.error);
      return { success: false, error: previewResult.error };
    }
    
    // 사용자 확인
    const confirmMessage = `🗑️ 시트 정리를 실행하시겠습니까?\n\n` +
      `📊 총 시트 수: ${previewResult.totalSheets}개\n` +
      `🗑️ 삭제할 시트: ${previewResult.deleteCount}개\n` +
      `💾 보존할 시트: ${previewResult.preserveCount}개\n\n` +
      `삭제 예정 시트:\n${previewResult.sheetsToDelete.slice(0, 10).join('\n')}` +
      (previewResult.sheetsToDelete.length > 10 ? `\n... 외 ${previewResult.sheetsToDelete.length - 10}개` : '') +
      `\n\n⚠️ 이 작업은 되돌릴 수 없습니다.`;
    
    const response = ui.alert(
      '시트 정리 확인',
      confirmMessage,
      ui.ButtonSet.YES_NO
    );
    
    if (response !== ui.Button.YES) {
      return { success: false, message: '사용자가 취소했습니다.' };
    }
    
    // 정리 실행
    const result = SheetCleaner.cleanupDailySheets();
    
    if (result.success) {
      ui.alert(`✅ 시트 정리 완료!\n\n` +
              `🗑️ 삭제된 시트: ${result.deletedCount}개\n` +
              `💾 보존된 시트: ${result.preservedCount}개\n\n` +
              `다음 시트들이 보존되었습니다:\n${result.preservedSheets.join('\n')}`);
    } else {
      ui.alert('❌ 시트 정리 실패: ' + result.error);
    }
    
    console.log('=== Global Function End: cleanupDailySheets SUCCESS ===');
    return result;
    
  } catch (error) {
    console.error('ERROR in global cleanupDailySheets:', error);
    console.log('=== Global Function End: cleanupDailySheets FAILED ===');
    
    SpreadsheetApp.getUi().alert('❌ 시트 정리 오류: ' + error.toString());
    return { success: false, error: error.toString() };
  }
}

/**
 * 날짜별 시트 정리 (메뉴에서 호출)
 */
function cleanupDateSheets() {
  console.log('=== Global Function Start: cleanupDateSheets ===');
  
  try {
    const ui = SpreadsheetApp.getUi();
    
    // 날짜 입력
    const response = ui.prompt(
      '📅 날짜별 시트 정리',
      '삭제할 날짜를 입력하세요:\n\nMMDD 형식 (예: 0810, 0811)\n또는 YYYYMMDD 형식 (예: 20240810)',
      ui.ButtonSet.OK_CANCEL
    );
    
    if (response.getSelectedButton() !== ui.Button.OK) {
      return { success: false, message: '사용자가 취소했습니다.' };
    }
    
    const inputDate = response.getResponseText().trim();
    if (!inputDate) {
      ui.alert('❌ 날짜를 입력해주세요.');
      return { success: false, error: '날짜가 입력되지 않았습니다.' };
    }
    
    if (!/^\d{4}$/.test(inputDate) && !/^\d{8}$/.test(inputDate)) {
      ui.alert('❌ 올바른 날짜 형식을 입력해주세요.\nMMDD (예: 0810) 또는 YYYYMMDD (예: 20240810)');
      return { success: false, error: '잘못된 날짜 형식입니다.' };
    }
    
    // 확인 메시지
    const confirmResponse = ui.alert(
      '날짜별 시트 정리 확인',
      `${inputDate} 날짜의 시트들을 삭제하시겠습니까?\n\n⚠️ 이 작업은 되돌릴 수 없습니다.`,
      ui.ButtonSet.YES_NO
    );
    
    if (confirmResponse !== ui.Button.YES) {
      return { success: false, message: '사용자가 취소했습니다.' };
    }
    
    // 정리 실행
    const result = SheetCleaner.cleanupDateSheets(inputDate);
    
    if (result.success) {
      ui.alert(`✅ ${inputDate} 날짜 시트 정리 완료!\n\n` +
              `🗑️ 삭제된 시트: ${result.deletedCount}개\n\n` +
              (result.deletedSheets.length > 0 ? 
                `삭제된 시트:\n${result.deletedSheets.join('\n')}` : 
                '삭제할 시트가 없었습니다.'));
    } else {
      ui.alert('❌ 날짜별 시트 정리 실패: ' + result.error);
    }
    
    console.log('=== Global Function End: cleanupDateSheets SUCCESS ===');
    return result;
    
  } catch (error) {
    console.error('ERROR in global cleanupDateSheets:', error);
    console.log('=== Global Function End: cleanupDateSheets FAILED ===');
    
    SpreadsheetApp.getUi().alert('❌ 날짜별 시트 정리 오류: ' + error.toString());
    return { success: false, error: error.toString() };
  }
}