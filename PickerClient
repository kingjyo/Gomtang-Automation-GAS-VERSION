<script>
  // ===== 상태 관리 =====
  let selectedSpreadsheet = null;
  let selectedFolder = null;
  let currentFolderId = 'root';
  let currentPath = [];
  let selectionMode = 'spreadsheet'; // 'spreadsheet' or 'folder'
  let isSearchMode = false;
  let currentSearchQuery = '';
  let searchTimeout = null;
  let currentPageToken = null;
  let nextPageToken = null;
  let currentPageNumber = 1;
  let pageTokenHistory = [null]; // 페이지 토큰 히스토리

  const qs = (id) => document.getElementById(id);

  // ===== UI 헬퍼 =====
  function showContent() {
    qs('loading').classList.remove('show');
    qs('content').style.display = 'block';
  }

  function updateSaveButton() {
    qs('saveBtn').disabled = !(selectedSpreadsheet && selectedFolder);
  }

  function updateDisplay(settings) {
    const ssDiv = qs('selectedSpreadsheet');
    const fdDiv = qs('selectedFolder');

    if (settings.sourceSpreadsheetId) {
      selectedSpreadsheet = {
        id: settings.sourceSpreadsheetId,
        name: settings.sourceSpreadsheetName || settings.sourceSpreadsheetId
      };
      ssDiv.textContent = selectedSpreadsheet.name;
      ssDiv.classList.remove('empty');
    } else {
      selectedSpreadsheet = null;
      ssDiv.textContent = '선택된 파일이 없습니다';
      ssDiv.classList.add('empty');
    }

    if (settings.folderId) {
      selectedFolder = {
        id: settings.folderId,
        name: settings.folderName || settings.folderId
      };
      fdDiv.textContent = selectedFolder.name;
      fdDiv.classList.remove('empty');
    } else {
      selectedFolder = null;
      fdDiv.textContent = '선택된 폴더가 없습니다';
      fdDiv.classList.add('empty');
    }

    updateSaveButton();
  }

  // ===== 드라이브 탐색기 =====
  function openDriveExplorer(mode) {
    selectionMode = mode;
    const modal = qs('explorerModal');
    const title = qs('explorerTitle');
    const selectBtn = qs('selectCurrentFolderBtn');
    
    title.textContent = mode === 'spreadsheet' ? '스프레드시트 선택' : '폴더 선택';
    modal.style.display = 'flex';
    
    // 폴더 선택 모드에서만 "이 폴더 선택" 버튼 표시
    selectBtn.style.display = mode === 'folder' ? 'block' : 'none';
    
    // 루트 목록 로드
    loadDriveRoots();
    // 초기 폴더 내용 로드
    loadFolderContents('root');
  }

  function closeDriveExplorer() {
    qs('explorerModal').style.display = 'none';
  }

  // 좌측 내비게이션 로드
  function loadDriveRoots() {
    console.log('=== UI Function Start: loadDriveRoots ===');
    const sidebar = qs('explorerSidebar');
    sidebar.innerHTML = '<div class="loading-text">로딩 중...</div>';
    
    google.script.run
      .withSuccessHandler(function(res) {
        console.log('Drive roots response:', res);
        if (res && res.success && res.roots) {
          let html = '<div class="nav-section">';
          res.roots.forEach(root => {
            html += `
              <div class="nav-item ${currentFolderId === root.id ? 'active' : ''}" 
                   onclick="navigateToFolder('${root.id}', '${root.name}')">
                <span class="nav-icon">${root.icon}</span>
                <span class="nav-name">${root.name}</span>
              </div>
            `;
          });
          html += '</div>';
          sidebar.innerHTML = html;
          console.log('Drive roots loaded successfully');
        } else {
          console.error('Invalid response format:', res);
          sidebar.innerHTML = '<div class="error-text">응답 형식 오류</div>';
        }
      })
      .withFailureHandler(function(err) {
        console.error('Drive roots load failed:', err);
        sidebar.innerHTML = '<div class="error-text">로드 실패</div>';
      })
      .getDriveRoots();
  }

  // 폴더 내용 로드
  function loadFolderContents(folderId, pageToken = null) {
    console.log('=== UI Function Start: loadFolderContents ===');
    console.log('Parameters:', { folderId, selectionMode, pageToken });
    
    const content = qs('explorerContent');
    const breadcrumb = qs('explorerBreadcrumb');
    
    content.innerHTML = '<div class="loading-text">로딩 중...</div>';
    
    // 새 폴더로 이동하는 경우 페이지 상태 초기화
    if (!pageToken && folderId !== currentFolderId) {
      currentPageNumber = 1;
      pageTokenHistory = [null];
      currentPageToken = null;
    }
    
    currentFolderId = folderId;
    
    // 필터 타입 결정
    const filterType = selectionMode === 'folder' ? 'all' : 'all';
    console.log('Filter type:', filterType);
    
    google.script.run
      .withSuccessHandler(function(res) {
        console.log('Folder contents response:', res);
        if (res && res.success) {
          displayFolderContents(res.items);
          updateBreadcrumb(folderId);
          
          // 페이지네이션 업데이트
          nextPageToken = res.nextPageToken || null;
          updatePaginationButtons(res.hasMore);
        } else {
          console.error('Invalid folder contents response:', res);
          content.innerHTML = '<div class="error-text">응답 형식 오류</div>';
        }
      })
      .withFailureHandler(function(err) {
        console.error('Folder contents load failed:', err);
        content.innerHTML = '<div class="error-text">로드 실패: ' + err.message + '</div>';
      })
      .getDriveFolderContents(folderId, filterType, pageToken);
  }

  // 폴더 내용 표시
  function displayFolderContents(items) {
    const content = qs('explorerContent');
    
    if (!items || items.length === 0) {
      content.innerHTML = '<div class="empty-text">폴더가 비어있습니다</div>';
      return;
    }
    
    let html = '<div class="file-grid">';
    items.forEach(item => {
      const isSelectable = (selectionMode === 'spreadsheet' && item.mimeType === 'application/vnd.google-apps.spreadsheet') ||
                          (selectionMode === 'folder' && item.type === 'folder');
      
      // 폴더는 더블클릭으로 진입, 스프레드시트는 단일클릭으로 선택
      let clickHandler = '';
      if (item.type === 'folder') {
        clickHandler = `ondblclick="navigateToFolder('${item.id}', '${item.name}')"`;
      } else if (isSelectable) {
        clickHandler = `onclick="selectItem('${item.id}', '${item.name}')"`;
      }
      
      html += `
        <div class="file-item ${isSelectable ? 'selectable' : ''}" ${clickHandler}>
          <div class="file-icon">${item.icon}</div>
          <div class="file-name">${item.name}</div>
        </div>
      `;
    });
    html += '</div>';
    content.innerHTML = html;
  }

  // Breadcrumb 업데이트
  function updateBreadcrumb(folderId) {
    google.script.run
      .withSuccessHandler(function(res) {
        if (res.success) {
          const breadcrumb = qs('explorerBreadcrumb');
          let html = '';
          res.path.forEach((item, index) => {
            if (index > 0) html += ' > ';
            html += `<span class="breadcrumb-item" onclick="navigateToFolder('${item.id}', '${item.name}')">${item.name}</span>`;
          });
          breadcrumb.innerHTML = html;
          currentPath = res.path;
        }
      })
      .getDrivePath(folderId);
  }

  // 폴더 이동
  function navigateToFolder(folderId, folderName) {
    loadFolderContents(folderId);
    
    // 좌측 내비게이션 활성 상태 업데이트
    document.querySelectorAll('.nav-item').forEach(item => {
      item.classList.remove('active');
    });
    event.currentTarget?.classList.add('active');
  }

  // 아이템 선택
  function selectItem(id, name) {
    if (selectionMode === 'spreadsheet') {
      selectedSpreadsheet = { id, name };
      qs('selectedSpreadsheet').textContent = name;
      qs('selectedSpreadsheet').classList.remove('empty');
    } else {
      selectedFolder = { id, name };
      qs('selectedFolder').textContent = name;
      qs('selectedFolder').classList.remove('empty');
    }
    
    closeDriveExplorer();
    updateSaveButton();
  }
  
  // 현재 폴더 선택 (폴더 모드에서만)
  function selectCurrentFolder() {
    if (selectionMode !== 'folder') return;
    
    // 특수 폴더는 선택 불가
    if (currentFolderId === 'sharedWithMe' || currentFolderId === 'recent' || currentFolderId === 'sharedDrives') {
      alert('이 위치는 저장 폴더로 선택할 수 없습니다.');
      return;
    }
    
    // 현재 경로의 마지막 폴더 이름 가져오기
    let folderName = '내 드라이브';
    if (currentPath && currentPath.length > 0) {
      folderName = currentPath[currentPath.length - 1].name;
    }
    
    // 폴더 선택
    selectItem(currentFolderId, folderName);
  }

  // ===== 저장 =====
  function saveSettings() {
    if (!selectedSpreadsheet || !selectedFolder) {
      alert('스프레드시트와 폴더를 모두 선택해주세요.');
      return;
    }
    
    const selection = { 
      spreadsheetId: selectedSpreadsheet.id, 
      folderId: selectedFolder.id 
    };

    google.script.run
      .withSuccessHandler(function (res) {
        if (res && res.success) {
          alert('✅ 설정이 저장되었습니다!');
          google.script.host.close();
        } else {
          alert('❌ 저장 실패: ' + (res && res.error ? res.error : '알 수 없는 오류'));
        }
      })
      .withFailureHandler(function (err) {
        console.error(err);
        alert('❌ 저장 중 오류가 발생했습니다.');
      })
      .savePickerSelection(selection);
  }

  // ===== 검색 기능 =====
  function handleSearch(event) {
    const query = event.target.value.trim();
    
    // 디바운싱: 300ms 후에 검색 실행
    if (searchTimeout) {
      clearTimeout(searchTimeout);
    }
    
    searchTimeout = setTimeout(() => {
      if (query === '') {
        // 검색어가 비어있으면 원래 폴더로 돌아가기
        if (isSearchMode) {
          isSearchMode = false;
          currentSearchQuery = '';
          loadFolderContents(currentFolderId);
        }
      } else {
        // 검색 실행
        performSearch(query);
      }
    }, 300);
  }

  function performSearch(query) {
    console.log('=== UI Function Start: performSearch ===');
    console.log('Search query:', query);
    console.log('Current folder context:', currentFolderId);
    
    isSearchMode = true;
    currentSearchQuery = query;
    
    const content = qs('explorerContent');
    const breadcrumb = qs('explorerBreadcrumb');
    
    content.innerHTML = '<div class="loading-text">검색 중...</div>';
    
    // 검색 컨텍스트에 따른 breadcrumb 메시지
    let contextMessage = '';
    if (currentFolderId === 'root') {
      contextMessage = '내 드라이브 전체에서';
    } else if (currentFolderId === 'sharedWithMe') {
      contextMessage = '공유 문서함에서';
    } else if (currentFolderId === 'sharedDrives') {
      contextMessage = '모든 공유 드라이브에서';
    } else if (currentFolderId === 'recent') {
      contextMessage = '최근 항목에서';
    } else {
      contextMessage = '현재 폴더 및 하위 폴더에서';
    }
    
    breadcrumb.innerHTML = `${contextMessage} 검색: "${query}"`;
    
    // 필터 타입 결정
    const filterType = selectionMode === 'folder' ? 'all' : 'all';
    
    google.script.run
      .withSuccessHandler(function(res) {
        console.log('Search response:', res);
        if (res && res.success) {
          if (res.items.length === 0) {
            content.innerHTML = '<div class="empty-text">검색 결과가 없습니다</div>';
          } else {
            displayFolderContents(res.items);
          }
        } else {
          console.error('Invalid search response:', res);
          content.innerHTML = '<div class="error-text">검색 실패</div>';
        }
      })
      .withFailureHandler(function(err) {
        console.error('Search failed:', err);
        content.innerHTML = '<div class="error-text">검색 실패: ' + err.message + '</div>';
      })
      .searchDriveFiles(query, filterType, currentFolderId);
  }

  function clearSearch() {
    const searchInput = qs('searchInput');
    searchInput.value = '';
    isSearchMode = false;
    currentSearchQuery = '';
    loadFolderContents(currentFolderId);
  }

  // ===== 새 폴더 만들기 =====
  function showNewFolderDialog() {
    // 특수 위치에서는 폴더 생성 불가
    if (currentFolderId === 'sharedWithMe' || currentFolderId === 'recent') {
      alert('이 위치에는 폴더를 만들 수 없습니다.');
      return;
    }
    
    if (currentFolderId === 'sharedDrives') {
      alert('공유 드라이브 루트에는 폴더를 만들 수 없습니다.\n특정 공유 드라이브를 선택해주세요.');
      return;
    }
    
    const folderName = prompt('새 폴더 이름을 입력하세요:');
    
    if (folderName && folderName.trim()) {
      createNewFolder(folderName.trim());
    }
  }
  
  function createNewFolder(folderName) {
    console.log('=== UI Function Start: createNewFolder ===');
    console.log('Creating folder:', folderName, 'in:', currentFolderId);
    
    const content = qs('explorerContent');
    const originalContent = content.innerHTML;
    content.innerHTML = '<div class="loading-text">폴더 생성 중...</div>';
    
    google.script.run
      .withSuccessHandler(function(res) {
        console.log('Create folder response:', res);
        if (res && res.success) {
          // 폴더 생성 성공 - 목록 새로고침
          loadFolderContents(currentFolderId);
          
          // 폴더 모드일 경우 새로 만든 폴더 자동 선택
          if (selectionMode === 'folder' && res.folder) {
            setTimeout(() => {
              selectItem(res.folder.id, res.folder.name);
            }, 500);
          }
        } else {
          content.innerHTML = originalContent;
          alert('폴더 생성 실패: ' + (res && res.error ? res.error : '알 수 없는 오류'));
        }
      })
      .withFailureHandler(function(err) {
        console.error('Create folder error:', err);
        content.innerHTML = originalContent;
        alert('폴더 생성 중 오류가 발생했습니다.');
      })
      .createNewFolder(currentFolderId, folderName);
  }

  // ===== 페이지네이션 =====
  function updatePaginationButtons(hasMore) {
    const pagination = qs('pagination');
    const prevBtn = qs('prevPageBtn');
    const nextBtn = qs('nextPageBtn');
    const pageInfo = qs('pageInfo');
    
    // 페이지네이션 표시/숨김
    if (currentPageNumber > 1 || hasMore) {
      pagination.style.display = 'flex';
    } else {
      pagination.style.display = 'none';
    }
    
    // 버튼 상태 업데이트
    prevBtn.disabled = currentPageNumber <= 1;
    nextBtn.disabled = !hasMore;
    
    // 페이지 정보 업데이트
    pageInfo.textContent = `${currentPageNumber} 페이지`;
  }
  
  function loadNextPage() {
    if (nextPageToken) {
      currentPageNumber++;
      pageTokenHistory.push(nextPageToken);
      currentPageToken = nextPageToken;
      
      if (isSearchMode) {
        performSearch(currentSearchQuery, nextPageToken);
      } else {
        loadFolderContents(currentFolderId, nextPageToken);
      }
    }
  }
  
  function loadPreviousPage() {
    if (currentPageNumber > 1) {
      currentPageNumber--;
      pageTokenHistory.pop();
      currentPageToken = pageTokenHistory[pageTokenHistory.length - 1];
      
      if (isSearchMode) {
        performSearch(currentSearchQuery, currentPageToken);
      } else {
        loadFolderContents(currentFolderId, currentPageToken);
      }
    }
  }

  // ===== 초기화 =====
  function boot() {
    qs('loading').classList.add('show');
    
    // 현재 설정 로드
    google.script.run
      .withSuccessHandler(function(res) {
        showContent();
        if (res?.success) {
          updateDisplay(res.settings);
        }
      })
      .withFailureHandler(function(err) {
        showContent();
        console.error('설정 로드 실패:', err);
      })
      .getCurrentPickerSettings();
  }

  window.addEventListener('load', boot);
</script>